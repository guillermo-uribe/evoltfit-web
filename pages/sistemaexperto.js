import React, { useState, useEffect } from 'react';
import Navbar from './Componentes/Navbar';
import Footer from "./Componentes/Footer";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import Seccion1 from "./SistemaE/Seccion1";
import Seccion2 from "./SistemaE/Seccion2";
import Seccion3 from "./SistemaE/Seccion3";
import Seccion4 from "./SistemaE/Seccion4";
import Seccion5 from "./SistemaE/Seccion5";
import Seccion6 from "./SistemaE/Seccion6";
import Link from "next/link";

export default function Home() {

  const [value, setValue] = useState(0);
  const [formData, setFormData] = useState({});
  const [formData2, setFormData2] = useState({});
  const [checkboxes, setCheckboxes] = useState({
    Ninguno: false,
    Bandaresistencia: false,
    Bandasuspension: false,
    Barra: false,
    BarraZ: false,
    Barras: false,
    Mancuerna: false,
    Mancuernas: false,
    PesaRusa: false,
    PlacaPeso: false,
    MaquinasGYM: false,
    BancoPlano: false,
    BancoDeclinado: false,
    BancoInclinado: false,
    Cuerda: false,

  });
  const [arreglo, setArreglo] = useState([]);
  const [showButton, setShowButton] = useState(false);
  const [showFinalizar, setFinalizar] = useState(false);

  let element;


  //Funcion para cambiar entre componentes a su vez agrega el contenido del objeto a un arreglo
  //y pone el boton sin funcion para que el usuario tenga que ingresar los datos
  function handleNext() {
    if (value < 4) {
      const { value: valor } = formData;
      setArreglo([...arreglo, valor]);
    }
    if(value===5){
      setFinalizar(true);
    }
    setValue(value + 1);
    setShowButton(false);
  }
  //Funcion para retroceder entre componentes posiblemente no serÃ¡ implementada
  function handlePrevious() {
    if (value > 0) {
      setValue(value - 1);
    }
  }
  //funcion que recibe solo un valor por componente
  const handleChange = (value) => {
    setFormData({ ...formData, value });
    setShowButton(true);
  }
  //funcion para enficar y recibir datos del formulario
  function handleFormSubmit(formValues) {
    if (formValues.edad === 0 && formValues.altura === 0 && formValues.peso === 0) {
      setValue(value + 1);
      //console.log(formValues);
      setFinalizar(true);
      setFormData2(formValues);
    } else {
      //console.log(formValues);
      setFormData2(formValues);
      setShowButton(true);
    }
  }
  //Funcion para las herramientas
  const handleCheckboxChange = (event) => {
    const { name, checked } = event.target;
    setCheckboxes({
      ...checkboxes,
      [name]: checked,
    });
  };
  //cambiar de componentes
  if (value === 0) {
    element = <Seccion1 onChange={handleChange} />;

  } else if (value === 1) {
    element = <Seccion2 onChange={handleChange} />;

  } else if (value === 2) {
    element = <Seccion3 onChange={handleChange} />;

  } else if (value === 3) {
    element = <Seccion4 onChange={handleChange} />;

  } else if (value === 4) {
    element = <Seccion5 onSubmit={handleFormSubmit} />;

  } else {
    element = <Seccion6 onCheckboxChange={handleCheckboxChange} />;
  }
  //actualizador solo para visualizar el funcionamiento de datos
  useEffect(() => {
    console.log("------------------");
    console.log(formData);
    console.log(arreglo);
    console.log("Herramientas: ");
    console.log(checkboxes);
    console.log("Imputs: ");
    console.log(formData2);
    //console.log(formHerra);
    //console.log(value);
  }, [formData, formData2, arreglo, checkboxes]);

  return (
    <div className="bg-blue-100 w-full h-screen">
      <Head>
        <title>EvoltFit - Sistema Experto</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />

      <main className={styles.main}>

        <div className={styles.seccion}>
          <h1>{element}</h1>
        </div>

        <div className='si'>
          {/*<button className="btn btn-outline rounded-full btn-secondary btn-lg m-8" onClick={handlePrevious}>Anterior</button>*/}
          {
            showFinalizar ? (
              <Link href = {{pathname: "../rutinaSE", query: { formData2: JSON.stringify(formData2), checkboxes: JSON.stringify(checkboxes), arreglo: JSON.stringify(arreglo) } }}>
              <button className="text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 shadow-lg shadow-red-500/50 dark:shadow-lg dark:shadow-red-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">Finalizar</button>
              </Link>

            ) : (
              showButton ? (
                <button className="relative inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-cyan-500 to-blue-500 group-hover:from-cyan-500 group-hover:to-blue-500 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-cyan-200 dark:focus:ring-cyan-800" onClick={handleNext}>
                <span className="relative px-5 py-2.5 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                  Siguiente
                </span>
                </button>
              ) : (
                <button className="text-white bg-blue-400 dark:bg-blue-500 cursor-not-allowed font-medium rounded-lg text-sm px-5 py-2.5 text-center" disabled>Siguiente</button>
              )
            )
          }
        </div>

      </main>
      <Footer></Footer>
    </div>
  );
}